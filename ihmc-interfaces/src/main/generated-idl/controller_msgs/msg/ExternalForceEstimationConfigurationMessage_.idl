#ifndef __controller_msgs__msg__ExternalForceEstimationConfigurationMessage__idl__
#define __controller_msgs__msg__ExternalForceEstimationConfigurationMessage__idl__

#include "geometry_msgs/msg/./Point_.idl"
module controller_msgs
{
  module msg
  {
    module dds
    {

      /**
       * This message is part of the IHMC external force estimation module.
       * It specifies where an expected external force will be applied.
       */
      @TypeCode(type="controller_msgs::msg::dds_::ExternalForceEstimationConfigurationMessage_")
      struct ExternalForceEstimationConfigurationMessage
      {
        /**
         * Unique ID used to identify this message, should preferably be consecutively increasing.
         */
        unsigned long sequence_id;
        /**
         * Estimator gain, usually in the range of 0.25 - 5.0. If the system is noisy or prone to oscillation, a lower gain is suggested.
         */
        @defaultValue(value=0.5)
        double estimator_gain;
        /**
         * Specifies the alpha value used by the damped least-squares solver, usually in the range (1e-6 - 1e-2). For long joint paths, smaller alphas are recommended.
         */
        @defaultValue(value=0.005)
        double solver_alpha;
        /**
         * The is the unique hash code of the end-effector that is assumed to be pushed
         * See RigidBody.hashCode() for the computation of a rigid-body hash code.
         */
        long end_effector_hash_code;
        /**
         * This is the position externally applied force to be estimated, in endEffector.getBodyFixedFrame().
         */
        geometry_msgs::msg::dds::Point external_force_position;
      };
    };
  };
};

#endif
